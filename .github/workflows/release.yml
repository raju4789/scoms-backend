name: 🎉 Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    name: 🚀 Create Release
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🏗️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🏗️ Build application
        run: npm run build

      - name: 📦 Create distribution package
        run: |
          tar -czf scoms-backend-${{ github.ref_name }}.tar.gz dist/ package.json package-lock.json

      - name: 📝 Generate changelog
        id: changelog
        run: |
          # Get commits since last tag
          PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
          if [ -z "$PREVIOUS_TAG" ]; then
            COMMITS=$(git log --pretty=format:"- %s (%h)" --reverse)
          else
            COMMITS=$(git log ${PREVIOUS_TAG}..HEAD --pretty=format:"- %s (%h)" --reverse)
          fi
          
          # Create changelog
          echo "## 🎉 What's New in ${{ github.ref_name }}" > CHANGELOG.md
          echo "" >> CHANGELOG.md
          echo "$COMMITS" >> CHANGELOG.md
          echo "" >> CHANGELOG.md
          echo "### 📊 Stats" >> CHANGELOG.md
          echo "- Commits: $(echo "$COMMITS" | wc -l)" >> CHANGELOG.md
          echo "- Contributors: $(git log ${PREVIOUS_TAG}..HEAD --format='%an' | sort -u | wc -l)" >> CHANGELOG.md

      - name: 🎉 Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: 🚀 SCOMS Backend ${{ github.ref_name }}
          body_path: CHANGELOG.md
          draft: false
          prerelease: ${{ contains(github.ref_name, 'beta') || contains(github.ref_name, 'alpha') }}

      - name: 📤 Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./scoms-backend-${{ github.ref_name }}.tar.gz
          asset_name: scoms-backend-${{ github.ref_name }}.tar.gz
          asset_content_type: application/gzip

      - name: 📢 Notify release
        uses: 8398a7/action-slack@v3
        with:
          status: success
          channel: '#releases'
          text: |
            🎉 New release published!
            Version: ${{ github.ref_name }}
            Repository: ${{ github.repository }}
          webhook_url: ${{ secrets.SLACK_WEBHOOK }}
        if: success()
