server:
  http_listen_port: 9080
  grpc_listen_port: 0
  log_level: warn

positions:
  filename: /promtail/positions.yaml
  sync_period: 10s

clients:
  - url: http://loki:3100/loki/api/v1/push
    timeout: 30s
    batchwait: 1s
    batchsize: 1048576

scrape_configs:
  # SCOMS Application Logs via Docker socket
  - job_name: scoms-app
    docker_sd_configs:
      - host: unix:///var/run/docker.sock
        refresh_interval: 5s
        filters:
          - name: label
            values: ['com.docker.compose.service=scoms-app']

    relabel_configs:
      # Extract container name
      - source_labels: ['__meta_docker_container_name']
        target_label: 'container_name'
        regex: '/(.+)'
        replacement: '${1}'

      # Extract service name from docker compose label
      - source_labels: ['__meta_docker_container_label_com_docker_compose_service']
        target_label: 'compose_service'

      # Add application label
      - target_label: 'application'
        replacement: 'scoms-backend'

      # Add environment label
      - target_label: 'environment'
        replacement: 'production'

    pipeline_stages:
      # Parse the application's JSON logs directly (no Docker wrapper)
      - json:
          expressions:
            level: level
            msg: msg
            method: method
            url: url
            statusCode: statusCode
            duration: duration
            correlationId: correlationId
            type: type
            pid: pid
            hostname: hostname
            time: time
            app_environment: environment

      # Use the timestamp from the log entry
      - timestamp:
          source: time
          format: RFC3339Nano

      # Extract level as a label
      - labels:
          level:

      # Output the message field
      - output:
          source: msg
