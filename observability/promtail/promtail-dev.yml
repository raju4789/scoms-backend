server:
  http_listen_port: 9080
  grpc_listen_port: 0
  log_level: warn

positions:
  filename: /promtail/positions.yaml
  sync_period: 10s

clients:
  - url: http://loki:3100/loki/api/v1/push
    timeout: 30s
    batchwait: 1s
    batchsize: 1048576

scrape_configs:
  # Local SCOMS Application Logs (file-based)
  - job_name: scoms-app-local
    static_configs:
      - targets:
          - localhost
        labels:
          job: scoms-app-local
          __path__: /app/logs/*.log

    pipeline_stages:
      # Try to parse application JSON logs
      - json:
          expressions:
            timestamp: timestamp
            level: level
            msg: msg
            service: service
            method: method
            url: url
            statusCode: statusCode
            duration: duration
            correlationId: correlationId
            error: error
            pid: pid
            hostname: hostname
            type: type
            environment: environment

      # Parse timestamp
      - timestamp:
          source: timestamp
          format: RFC3339

      # Add development-specific labels
      - labels:
          level:
          service:

      # Add static labels for development
      - static_labels:
          environment: development
          application: scoms-backend
          deployment: local

  # Docker container logs for development services
  - job_name: development-services
    docker_sd_configs:
      - host: unix:///var/run/docker.sock
        refresh_interval: 5s
        filters:
          - name: label
            values:
              - 'com.docker.compose.project=scoms-backend'

    relabel_configs:
      # Extract container name
      - source_labels: ['__meta_docker_container_name']
        target_label: 'container_name'
        regex: '/(.+)'
        replacement: '${1}'

      # Extract service name from docker compose label
      - source_labels: ['__meta_docker_container_label_com_docker_compose_service']
        target_label: 'compose_service'

      # Add environment label
      - target_label: 'environment'
        replacement: 'development'

      # Filter out app container (we get logs from files instead)
      - source_labels: ['__meta_docker_container_label_com_docker_compose_service']
        regex: 'scoms-app'
        action: drop

    pipeline_stages:
      # Parse Docker JSON log format
      - json:
          expressions:
            log: log
            stream: stream
            timestamp: time

      # Use Docker timestamp
      - timestamp:
          source: timestamp
          format: RFC3339Nano

      # Add labels for development services
      - labels:
          container_name:
          compose_service:
          environment:
